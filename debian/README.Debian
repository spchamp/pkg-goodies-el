Emacs Goodies for Debian
------------------------

This package is created from the `emacs-goodies-el' Debian source package,
which contains a number of Emacs-Lisp files that provide various added
functions to Emacs and/or Gnus.  The source package creates the following
binary packages:

 emacs-goodies-el: Miscellaneous add-ons for Emacs
 gnus-bonus-el:    Miscellaneous add-ons for Gnus
 debian-el:        Debian-specific tools (Access the Debian BTS, etc)
 dpkg-dev-el:      Emacs-related Debian development helpers
 devscripts-el:    Emacs wrappers for the commands in devscripts

  The numbering scheme for all packages follows the source package scheme:
the major revision number changes when adding or removing files or binary
packages to this source package; the minor revision number changes when
these files have a new upstream release; Debian revision is for packaging
only.

  The file you're currently reading is mostly meant as an introductory
starter for the various goodies included in emacs-goodies-el.  The package
comes with Info node `emacs-goodies-el' (still a work-in-progress) that
will document each included files when it's finished.


Introduction to files in emacs-goodies-el
-----------------------------------------

,----[ nice title ]
| boxquote.el allows the easy creation of boxes that look like this,
| with a nice title and all.  Look for the M-x boxquote-* commands.
`----

align-string.el provides M-x align-string and M-x align-all-strings,
to align vertically the first occurences of a regexp over several
lines.

all.el provides M-x all, a way to see all lines matching a regexp
pattern in a special buffer.  Editing these lines in that buffer
propagates the changes back to the original buffer.

apache-mode.el provides fontification when editing Apache configuration
files.

ascii.el provides a way to display ASCII code on a window, that is, display
in another window an ASCII table highlighting the current character code.

auto-fill-inhibit.el provides a finer grained control over
auto-fill-mode activation.  Tu use it, simply load the file.  For
instance, adding (load-library "auto-fill-inhibit") to your .emacs
should do the trick.  You'll need to set the auto-fill-inhibit-list
variable to an appropriate value.

bar-cursor.el allows you to change your cursor from a block to a
vertical bar in insert mode, and back to a block in overwrite mode.
Try M-x bar-cursor-mode.

browse-huge-tar.el allows you to browse large tar files without reading
them into memory.  The trade off is memory usage vs. speed.

browse-kill-ring.el provides M-x browse-kill-ring.el, to, well, browse
through your kill ring, perform searches on it, and insert items into
a buffer.

clipper.el provides the M-x clipper-* commands to save strings of data
and insert them afterwards.  Each string is labeled with a name, and
can involve some basic template replacement.

ctypes.el can search through source files hunting down typedefs.  When
found, font-lock is informed and your source code will be even more
beautifully colored than before.

coffee.el provides an Emacs interface to RFC2324-compliant coffee
devices

cyclebuffer.el provides M-x cyclebuffer-forward, to switch to other
buffers in the most-recently-visited-first order.  If you accidentally
overshoot, calling cyclebuffer-backward goes back.  You might want to
bind these commands to your favourite keys.

cwebm.el is a modified CWEB/WEB modified mode.

dedicated.el allows you to toggle a window's "dedicated" flag.
When a window is "dedicated", Emacs will not select files into that window.

df.el provides M-x df, to display in the mode line space left on
devices.

dict.el is an Emacs wrapper around `dict' command to provide access to
a dictd server from within Emacs.  The package provides several
(customisable) key bindings, here are two of the default ones: `C-c d
d' runs dict on the word at point.  `C-c d r' runs dict on region as a
single word.

diminish.el provides M-x diminish, M-x diminish-undo and M-x
diminished-modes.  Diminished modes are minor modes with a shorter or
no modeline display.

dirvars.el provides a functionality similar to the local variables
defined in a file, but for an entire directory tree.  Use (require
'dirvars) in your .emacs to activate it.

edit-env.el lets you display, edit, delete and add environment variables.

egocentric.el provides M-x egocentric-mode, a mode to highlight your
name (or other keywords) in buffers.  If you use Gnus, you might want
to add (add-hook 'gnus-article-prepare-hook 'egocentric-mode) to your
Gnus init file.

ff-paths.el allows you to use C-x C-f normally most of the time,
except that if the requested file doesn't exist, it is checked against
a list of patterns for special paths to search for a file of the same
name.  Use (require 'ff-paths) in your .emacs to activate it.

filladapt.el enhances the behavior of Emacs's fill functions by
guessing the proper fill prefix in many contexts.  Emacs has a
built-in adaptive fill mode but Filladapt is said to be much better.
Use `M-x filladapt-mode' to toggle Filladapt mode on/off in the current
buffer.  Use 'turn-on-filladapt-mode in mode hooks.

folding.el provides a minor mode for folding (hiding) parts of the edited
text or program.  Folding mode handles a document as a tree, where each
branch is bounded by special markers `{{{' and `}}}'.

framepop.el makes temporary buffers such as *Help* or *Completions* appear
in a separate frame which is easily dismissed when no longer needed.

floatbg.el provides M-x floatbg-mode, to slowly modify the background
color of your Emacs.

highlight-beyond-fill-column.el highlights (with a face you choose) text
that is beyond the fill-column, therefore providing a visual indication of
where the fill-* functions would wrap the lines.  Enable it on a buffer
using `M-x highlight-beyond-fill-column.'  You may use that command in a
hook (e.g. text-mode-hook)

highlight-current-line.el highlights the line the cursor is in.  Enable a
buffer using the command `M-x highlight-current-line-minor-mode'. You may
enable the minor-mode automatically for (almost) all buffers by

home-end.el provides some useful bindings for Home and End keys: hit the
key once to go to the beginning/end of a line, hit it twice in a row to go
to the beginning/end of the window, three times in a row goes to the
beiginning/end of the buffer.  To enable it, customize the variable
`home-end-enable'.

htmlize.el provides many M-x htmlize-* commands that turn files,
buffers, or region of font-lock colorised text into an HTML
representation.

ibuffer.el is an advanced replacement for the `buffer-menu' which is
normally distributed with Emacs.  Its interface is intended to be
analogous to that of Dired.

initsplit.el allows you to split Emacs customizations (set via M-x
customize) into different files, based on the names of the variables.
To use it, just load the file in your .emacs: (load "initsplit").
Note that that you *must* load each file that contains your various
customizations from your .emacs.

joc-toggle-buffer.el provides M-x joc-toggle-buffer, a command that can be
bound to a key in order to speed up the switching between two buffers.

joc-toggle-case.el provides a sophisticated (over-engineered?) set of
functions to toggle the case of the character under point, with which
you can emulate vi's ~ function.  Look for the M-x joc-toggle-case and
M-x joc-toggle-case-* commands.

keydef.el provides the `keydef' macro for use in .emacs files (or
similar).  It is an alternative (simpler) way to define keys, with kbd
syntax.  You should read the doc in keydef.el, as it is not intended
for interactive use.

keywiz.el drills you about Emacs key-bindings.  You're presented with
the name of a command and the docstring, and then prompted for the
correct key sequence.  You'll earn one point for each correct answer
during the time limit.  Invoke with `M-x keywiz'.

lcomp.el adds useful keybindings to the completions buffer.

map-lines.el provides M-x map-lines, a command to iterate a given
command over lines matching a regexp.

marker-visit.el provides a simple way to navigate among marks in a buffer.
All the marks you've left while editing a buffer serve as bread crumb
trails of areas in the buffer you've edited.  It is convenient to navigate
back and forth among these marks in order.  This file provides two methods
to do just that, marker-visit-prev and marker-visit-next to visit the
nearest mark in either direction.

minibuf-electric.el eases minibuffer typing.  When you type "//", it clears
the minibuffer back to the start, leaving only a single "/".  When you type
a "~", it does the similar, leaving only "~/".  This is nicer than having
to explicitly erase the contents of the minibuffer.

minibuffer-complete-cycle.el makes `minibuffer-complete' select each of the
possible completions in turn, inserting it into the minibuffer and
highlighting it in the *Completions* buffer.

mutt-alias.el provides M-x mutt-alias-insert and M-x
mutt-alias-lookup, two commands to lookup and insert the expansion of
mutt mail aliases.

muttrc-mode.el provides muttrc-mode, a major mode to help the edition
of Mutt configuration files.  To use it, either open a file named
muttrc, or add a local variables section to the end of your file to
specify the mode to be "muttrc".

newsticker.el is a newsticker for Emacs.  A newsticker is a thing that
asynchronously retrieves a list of headlines (which are contained in RDF
Site Summary (RSS) files) from a list of news sites, displays these
headlines, and allows for loading the corresponding articles in a web
browser.

nuke-trailing-whitespace.el (renamed from whitespace.el) provides M-x
nuke-trailing-whitespace, a command that deletes trailing whitespaces in
buffers.

obfusurl.el provides M-x obfuscate-url, a command that will obfuscate
an URL under the cursor.

pack-windows.el resizes all windows vertically to display as much
information as possible with the command `M-x pack-windows'.

perldoc.el provides an interface to the "perldoc" command in your
Perl-mode or CPerl-mode buffers.  Use (require 'perldoc) in your
.emacs to activate it, then place point over a word and press F1.

projects.el provides M-x add-project, remove-project and
list-projects, and introduces the concept of PROJECT ROOTS that allow
the user to define logical project names and get abbreviated yet
meaningful buffer names in the modeline.

protbuf.el provides M-x protect-buffer-from-kill-mode and M-x
protect-process-buffer-from-kill-mode, two commands to protect buffers
from being accidentally killed.

protocols.el provides M-x protocols-lookup, to search for info in your
/etc/protocols.

rfcview.el formats IETF RFCs for improved readability.

services.el provides M-x services-lookup, to search for info in your
/etc/services.

session.el restores various variables (e.g., input histories) from your
last session.  It also provides a menu containing recently changed/visited
files and restores the places (e.g., point) of such a file when you revisit
it.

setnu.el provides M-x setnu-mode, a vi-style line number mode.

shell-command.el is an an enhancement for shell-command, enabling
tab-completion of commands and dir/filenames within the shell-command input
context.

silly-mail.el provides M-x add-sm-* commands to add various headers to
your email messages.

sys-apropos.el provides M-x sys-apropos, an interface to the "apropos"
command.

table.el provides a text based table creation and editing feature.
With this package Emacs is capable of editing tables that are embedded
inside a text document, the feature similar to the ones seen in modern
WYSIWYG word processors.  Invoke it with M-x table-insert.  You might
also want to add (add-hook 'text-mode-hook 'table-recognize) to your
.emacs, please read the table.el file for more documentation on this.

tail.el provides the commands M-x tail-file and M-x tail-command, to
follow the output of a command (or to follow a log file) without using
any terminals.

tc.el provides a nice way to quote cited texts, with proper filling
and attribution.  You can use it for instance by setting the cite
function to 'trivial-cite: (setq message-cite-function 'trivial-cite).

thinks.el provides cartoon-like think bubbles . o O ( like this ).
Look for M-x thinks* commands.

tld.el provides M-x tld, for easy access to all those top-level
domains you just can't remember, and to the corresponding countries.

todoo.el provides M-x todoo and M-x todoo-mode, to conveniently edit
TODO lists.

toggle-option.el provides M-x toggle-option, a command to rapidly
toggle an option.  You should set the toggle-option-list variable to
an appropriate value.

twiddle.el provides mode-line hacks.  There are two user commands of
interest: twiddle-start and twiddle-compile.

under.el provides M-x underline-region, to underline a bit of text
with ^ characters like this.
                  ^^^^^^^^^

wdired.el provides M-x wdired-change-to-wdired-mode (when in a dired
buffer) and allows you to edit the filenames and permission bits
easily.

xrdb-mode.el provides the xrdb-mode major mode, to help you editing X
resource database files.  To use it, simple open a file named
.Xdefaults, .Xenvironment, .Xresources or *.ad.

 -- Peter S Galbraith <psg@debian.org>, Mon Sep 26 21:43:19 2005
