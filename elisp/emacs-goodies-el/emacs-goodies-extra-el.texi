@c -*- mode: texinfo -*-
\input texinfo

@c $Id: emacs-goodies-extra-el.texi,v 1.4 2003/09/27 00:32:28 psg Exp $
@c %**start of header
@setfilename info/emacs-goodies-extra-el
@settitle Emacs-Goodies-extra-el
@c %**end of header

@dircategory Emacs
@direntry
* Emacs-Goodies-extra:
  (emacs-goodies-extra-el). Misc add-ons for Emacs
@end direntry

@c Version variables.
@set EDITION 1.0
@set UPDATED 23 Sept 2003

@ifinfo
This is Edition @value{EDITION}, last updated @value{UPDATED}, of
@cite{Emacs-Goodies-extra-el}.
@end ifinfo

@titlepage
@title Emacs-Goodies-extra-el: Miscellaneous add-ons for Emacs
@subtitle A manual for what's in this package.
@author Peter S. Galbraith
@end titlepage

@node Top, dict, (dir), (dir)
@top The Emacs-Goodies-extra-el Package Setup

This manual describes the Emacs-Goodies-extra-el package and its
setup.  A quick descriptions of elisp files contained in this package
can be found in the file
@file{/usr/share/doc/emacs-goodies-extra-el/README.Debian}.

All packaged files are installed, setup and ready to use if they don't
override standard Emacs commands, modes, or settings.

To customize setup of all customizable packages on a finer-grain
basis, do:
@example
@kbd{M-x} customize-group @key{RET} emacs-goodies-extra-el @key{RET}
@end example

@menu
* dict::                        Emacs interface to dict client
* newsticker::                  A Newsticker for Emacs
@end menu

This work compiles GPL'ed documentation from the files in
/usr/share/emacs/site-lisp/emacs-goodies-extra-el/.  As a derived work
from GPL'ed works, this text is also licensed under the GPL V2 (See
/usr/share/common-licenses/GPL-2) and is edited by Peter S. Galbraith
@email{psg@@debian.org}.

@node dict, newsticker, Top, Top
@chapter dict - Emacs interface to dict client

This package is an Emacs wrapper around the shell @file{dict} command
and provides an easy and comfortable (from my point of view) access to
the dictd server from Emacs.

The package provides several key bindings, which are customisation variables, 
so you can change them easily:

@itemize @bullet
@item
@key{C-c d d} for running dict with options defined by
customisation variables described below.

@item
@key{C-c d r} for running dict on region as a single word.

@item
@key{C-c d m} for running dict on every word in the region.

@item
@key{C-c d s} for running dict to perform search on the given server.

@item
@key{C-c d w} for running wordinspect GUI dict client.
@end itemize

The Debian emacs-goodies-extra-el package doesn't setup these keys by
default.  The first time you use @code{dict} in a session you must do
so manually with @code{M-x dict}.  Thereafter the keybindings will
work.  If someone requests it, a customization variable could be added
to enable them automatically.

Descriptions of all customisation variables are given below in their 
definitions, and of cause you can find them in the customization of
the grou @code{Dict}.

The author hopes you find the program useful and would like to know
your opinion about the program, improvement suggestions and of course
bug reports.  Mail them to max-appolo@@mail.ru

@node newsticker,  , dict, Top
@chapter newsticker - A Newsticker for Emacs.

@noindent Copyright (C) 2003 by Ulf Jasper

This package provides a newsticker for Emacs.  A newsticker is a thing
that asynchronously retrieves a list of headlines (which are contained
in RDF Site Summary (RSS) files) from a list of news sites, displays
these headlines, and allows for loading the corresponding articles in
a web browser.

This package should work with all RSS files that follow the "RDF Rich
Site Summary (RSS) 1.0" specification (see
@url{http://purl.org/rss/1.0/spec}).  It may also work with
other/older/alternative rss formats (like 0.9<something> or such).

This package requires wget for retrieving headlines asynchronously.

Headlines can be displayed in the echo area, but they will show only
if no other program is using the echo area (and minibuffer).
Besides, headlines and their descriptions are collected in a buffer
called *newsticker*.

To use, do @command{M-x newsticker-start}.  This will retrieve
headlines from each url in @code{newsticker-url-list-defaults} and
@code{newsticker-url-list} every @code{newsticker-retrieval-interval}
seconds.  All headlines are placed in the buffer @code{*newsticker*}.
Clicking @key{mouse-button-2} or pressing @key{RET} in that buffer on
a headline will call @command{browse-url} to load the corresponding
news story in your favourite web browser.

Every @code{newsticker-display-interval} a headline is shown in the
echo area (if @code{newsticker-display-interval} is positive).

In order to stop the newsticker say @command{M-x newsticker-stop}.
This will stop all timers.

The function @command{newsticker-show-news} will update the
\*newsticker* buffer, if necessary, and recreate it if you accidentally
deleted it.  The modeline will indicate whether the *newsticker*
buffer is up to date with the newsticker-cache.

Newsticker-mode extends @command{outline-mode} so that you can easily
hide and show descriptions of feeds and news items.

Newsticker-mode supports imenu.  It allows for navigating with the
help of a menu.  In order to use this feature you should add the
following to you .emacs file:

@example
  (add-hook 'newsticker-mode-hook 'imenu-add-menubar-index)
@end example

All newsticker-options are customizable.  Do @command{M-x customize-group
@key{RET} newsticker @key{RET}} in order to customize the newsticker settings.

Enjoy!

PS: This newsticker is designed do its job silently in the
    background without disturbing you.  However, it is probably
    impossible to prevent such a tool from slightly attenuating your
    Editor's responsiveness every once in a while.
